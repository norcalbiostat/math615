{
  "hash": "0dcf18025d3d0eb2bcc517adfbd1afbd",
  "result": {
    "markdown": "---\ntitle: \"Choosing Appropriate Analysis\"\ndate: \"2024-10-14\"\nauthor: \"Robin Donatello\"\ndescription: \"lec07a\"\nfooter: \"[ðŸ”— https://math615.netlify.app](https://math615.netlify.app) / Stat Inference via Models\"\nfrom: markdown+emoji\nformat: \n  revealjs:\n    theme: sky\n    transition: fade\n    slide-number: true\n    incremental: false \n    chalkboard: true\nexecute:\n  freeze: auto\n  echo: true\nknitr:\n  opts_chunk: \n    R.options:\n      width: 200\n---\n\n\n## A unifying model framework {.smaller}\n\nA good way to think about all statistical models is that the observed data comes from some true model with some random error.\n\n> DATA = MODEL + RESIDUAL\n\n-   The `MODEL` is a mathematical formula (like $y = f(x)$).\n-   The formulation of the `MODEL` will change depending on the number of, and data types of explanatory variables.\n-   One goal of inferential analysis is to explain the variation in our data, using information contained in other measures (the model). To minimize the unexplained, or `residual` error.\n\n## Which model to use?\n\nMoving from:\n\n> \"What descriptive measures should be used to examine the data\"\n\nto\n\n> \"What statistical analyses should be performed?\n\n\\\n\n\n\n## Choosing Appropriate Analysis {.smaller}\n\nThis table shows which statistical analyses procedures are appropriate depending on the combination of explanatory (rows) and response (columns) variable. \n\n\n| Exp \\\\ Resp      | Binary              | **Categorical**                     | **Quantitative**                |\n|---------------|-------------------|-------------------|-------------------|\n| **Binary**       | Chi-squared         | Chi-squared                         | T-Test, Linear Regression       |\n| **Categorical**  | Chi-squared         | Chi-squared                         | ANOVA, Linear Regression        |\n| **Quantitative** | Logistic Regression | *Multinomial or Ordinal Regression* | Correlation & Linear Regression |\n\n\nSee Table 6.2 in PMA6 for a more detailed table. \n\n## Why selection can be difficult\n\n::: incremental\n-   Classroom instruction tends to present methods in logical order from a learning perspective. Building from simple to more complex. Exposure to complex models limited.\n-   Real life data often contain a mixture of data types, missing data and complex patterns. This can make the choice of analysis somewhat arbitrary at times.\n-   Two trained statisticians presented with the same data will often approach the analysis from different perspectives, and may different analyses depending on what assumptions they are willing to make.\n:::\n\n## Not always clear {.smaller}\n\n-   The primary assumption of most standard statistical procedures is that the records are independent of each other.\n-   Often program evaluation relies on paired measurements before and after a certain exposure or treatment (pre-post).\n    -   In this case, the approach is to calculate a pairwise difference for each individual and compare the average difference to 0 (any change vs no change).\n-   For the purposes of this class, we will only concern ourselves with independent groups.\n\nRepeated measures is a topic typically taught in MATH 456 (but also covered in Chapter 18 of PMA6)\n\n## Everything is a linear model\n\n* Most of the common statistical tests (including the ones we cover) are special cases of linear regression\n\n* https://lindeloev.github.io/tests-as-linear/\n\n## Additional References\n\nPMA6 does not go over T-test, ANOVA or $\\chi^{2}$ tests. To see more examples (with R code) and more mathematical detail see [Chapter 5 in the Applied Stats Course Notes](https://norcalbiostat.github.io/AppliedStatistics_notes/bivariate-analysis.html)\n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {
      "include-after-body": [
        "\r\n<script>\r\n  // htmlwidgets need to know to resize themselves when slides are shown/hidden.\r\n  // Fire the \"slideenter\" event (handled by htmlwidgets.js) when the current\r\n  // slide changes (different for each slide format).\r\n  (function () {\r\n    // dispatch for htmlwidgets\r\n    function fireSlideEnter() {\r\n      const event = window.document.createEvent(\"Event\");\r\n      event.initEvent(\"slideenter\", true, true);\r\n      window.document.dispatchEvent(event);\r\n    }\r\n\r\n    function fireSlideChanged(previousSlide, currentSlide) {\r\n      fireSlideEnter();\r\n\r\n      // dispatch for shiny\r\n      if (window.jQuery) {\r\n        if (previousSlide) {\r\n          window.jQuery(previousSlide).trigger(\"hidden\");\r\n        }\r\n        if (currentSlide) {\r\n          window.jQuery(currentSlide).trigger(\"shown\");\r\n        }\r\n      }\r\n    }\r\n\r\n    // hookup for slidy\r\n    if (window.w3c_slidy) {\r\n      window.w3c_slidy.add_observer(function (slide_num) {\r\n        // slide_num starts at position 1\r\n        fireSlideChanged(null, w3c_slidy.slides[slide_num - 1]);\r\n      });\r\n    }\r\n\r\n  })();\r\n</script>\r\n\r\n"
      ]
    },
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}