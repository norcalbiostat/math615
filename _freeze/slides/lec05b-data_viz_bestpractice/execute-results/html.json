{
  "hash": "4250a87d662036d3741f277f9bba80e5",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: \"Best practices in Data Visualization\"\ndate: \"2025-09-24\"\ndescription: \"lec05b\"\nauthor: \"Robin Donatello\"\nfrom: markdown+emoji\nformat: \n  revealjs:\n    theme: sky\n    transition: fade\n    slide-number: true\n    incremental: false \n    chalkboard: true\n    code-fold: true\n    code-summary: \"Show the code\"\nexecute:\n  freeze: auto\n  echo: true\nknitr:\n  opts_chunk: \n    R.options:\n      width: 200\n---\n\n\n\n\n## Recap: Level of care depends on the audience {.smaller}\n\nThere are three main audiences in mind when creating data visualizations:\n\n1.  For your eyes only (FYEO). These are quick and dirty plots, without annotation. Meant to be looked at once or twice.\n\n2.  To share with others internally. These mostly need to stand on their own. Axes labels, titles, colors as needed, possibly captions.\n\n3.  Professional - Contains all bells and whistles needed to make it publication quality.\n\n## Highly recommended references\n\n::: columns\n::: {.column width=\"40%\"}\n![](images/tufte_book.gif)\n:::\n\n::: {.column width=\"60%\"}\nThe classic book on statistical graphics, charts, tables. Theory and practice in the design of data graphics, 250 illustrations of the best (and a few of the worst) statistical graphics, with detailed analysis of how to display data for precise, effective, quick analysis.\n:::\n:::\n\n## Highly recommended references\n\n::: columns\n::: {.column width=\"40%\"}\n![](images/truthful_art.jpg)\n:::\n\n::: {.column width=\"60%\"}\nIn The Truthful Art, Cairo explains the principles of good data visualization. He describes five qualities that should be your foundation when you work with data visualization: truthful, functional, beautiful, insightful, and enlightening. Cairo also gives some great examples of biased and dishonest visualization.\n:::\n:::\n\n## Five qualities of great visualizations (Cairo) {.smaller}\n\n1.  Truthful. Be honest with scaling and relationships.\n2.  Functional. Does it accurately convey the correct information?\n3.  Beautiful. Or at least aesthetically pleasing.\n4.  Insightful. Does it reveal new information?\n5.  Enlightening. Consequence of qualities 1-4\n\nReferences:\n\n-   [UMSL Computer Science worksho on effective data viz](https://badriadhikari.github.io/data-viz-workshop-2021/five-qualities/)\\\n-   [Calling Bullshit: Spotting misleading axes](https://www.callingbullshit.org/tools.html)\n\n## Graphing with intent\n\nAlong with having the audience in mind, it is important to give thought to the purpose of the chart.\n\n> The effectiveness of any visualization can be measured according to how well it fulfills the tasks it was designed for. (A. Cairo, 2018).\n\n## Manage your ink to information ratio\n\n> \"Data-ink is the non-erasable core of the graphic. (Tufte, 83)\"\n\n::: {layout-ncol=\"2\"}\n![](https://images.squarespace-cdn.com/content/v1/56713bf4dc5cb41142f28d1f/1450306653111-70K5IT30R69NWPDIE1ZJ/data-ink.gif?format=950w){fig-align=\"center\"}\n\n[Darkhorse Analytics](https://www.darkhorseanalytics.com/blog/data-looks-better-naked/) demonstrates how \"data looks better naked\"\n:::\n\n## What to watch out for\n\n-   Avoid complexity\n-   Choose colors mindfully\n-   Do not add extra dimensions\n-   Be truthful with the scaling\n-   Check publishing guidelines\n-   Be consistent with selected themes\n-   Do not over-interpret\n-   Plotting with missing data\n\n## Inspirations\n\nNot sure what type of graph to create?\n\n-   Poke around on the [R Graph Gallery](https://r-graph-gallery.com/) or [Python version](https://www.python-graph-gallery.com/). *Appropriate for all languages as the goal is to identify the graph type*\n\n-   [from Data to Viz: a decision tree for graph options](https://www.data-to-viz.com/)\n\n\n## Graphs as storytelling\n\nDifferent features (labels, colors, axes) can tell different parts of the story. \n\nWe're going to do a team activity called \"slow reveal graphs\". Head to Canvas for further instruction. ",
    "supporting": [
      "lec05b-data_viz_bestpractice_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {
      "include-after-body": [
        "\n<script>\n  // htmlwidgets need to know to resize themselves when slides are shown/hidden.\n  // Fire the \"slideenter\" event (handled by htmlwidgets.js) when the current\n  // slide changes (different for each slide format).\n  (function () {\n    // dispatch for htmlwidgets\n    function fireSlideEnter() {\n      const event = window.document.createEvent(\"Event\");\n      event.initEvent(\"slideenter\", true, true);\n      window.document.dispatchEvent(event);\n    }\n\n    function fireSlideChanged(previousSlide, currentSlide) {\n      fireSlideEnter();\n\n      // dispatch for shiny\n      if (window.jQuery) {\n        if (previousSlide) {\n          window.jQuery(previousSlide).trigger(\"hidden\");\n        }\n        if (currentSlide) {\n          window.jQuery(currentSlide).trigger(\"shown\");\n        }\n      }\n    }\n\n    // hookup for slidy\n    if (window.w3c_slidy) {\n      window.w3c_slidy.add_observer(function (slide_num) {\n        // slide_num starts at position 1\n        fireSlideChanged(null, w3c_slidy.slides[slide_num - 1]);\n      });\n    }\n\n  })();\n</script>\n\n"
      ]
    },
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}